#!/usr/bin/env perl

#============================================================================
# really simple script, which just prints out the numactl cmd to 
# prefix before your actual command. it detemines this based on free memory
# size attached to every node.
#============================================================================

use strict;
use warnings;

my $path = `which numactl`;
if(length($path) > 0) {
  my ($head_line, @rest) = map {chomp; $_} `numactl -H`;

  if($head_line =~ /available: (\d+) nodes/) {
    my $node_count     = $1;
    my $best_node_id   = undef
    my $best_cpus      = undef;
    my $best_free_size = undef;

    foreach my $num (1..$node_count) {
      my $cpus_line     = shift(@rest);
      my $mem_size_line = shift(@rest);
      my $mem_free_line = shift(@rest);

      if($cpus_line =~ /node (\d+) cpus: (\d.*\d)$/) {
        my ($node_id, $cpus) = ($1, $2);
        $cpus =~ s/\s+/,/g;

        if($mem_free_line =~ /node $node_id free: (\d+) \S+$/) {
          my $free_size = $1;
          if(!defined($best_free_size) || ($free_size > $best_free_size)) {
            $best_node_id   = $node_id;
            $best_cpus      = $cpus;
            $best_free_size = $free_size;
          }
        } else {
          die("malformed mem-free line: $mem_free_line\n");
        }
      } else {
        die("malformed cpus line: $cpus_line\n");
      }
    }
    print("numactl -m $best_node_id -C $best_cpus --");
  } else {
    die("malformed head line: $head_line\n");
  }
}

